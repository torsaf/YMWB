"""
–ú–æ–¥—É–ª—å order_notifications –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º Yandex.Market –∏ Wildberries,

–§—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è:
- get_orders_yandex_market: –ø–æ–ª—É—á–∞–µ—Ç –∑–∞–∫–∞–∑—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Yandex.Market, –∏—Å–ø–æ–ª—å–∑—É—è API.
- get_orders_wildberries: –ø–æ–ª—É—á–∞–µ—Ç –∑–∞–∫–∞–∑—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Wildberries, –∏—Å–ø–æ–ª—å–∑—É—è API.
- get_orders_megamarket: –ø–æ–ª—É—á–∞–µ—Ç –∑–∞–∫–∞–∑—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Megamarket, –∏—Å–ø–æ–ª—å–∑—É—è API.
- write_order_id_to_file: –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç ID –∑–∞–∫–∞–∑–æ–≤ –≤ —Ñ–∞–π–ª –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.
- notify_about_new_orders: –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö —Å —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º.

"""

import requests
import os
import pandas as pd
from dotenv import load_dotenv
from notifiers import get_notifier
import json

load_dotenv()

telegram_got_token = os.getenv('telegram_got_token')  # —Ç—É—Ç –ø—Ä–æ–ø–∏—Å–∞–Ω ID —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
telegram_chat_id = os.getenv('telegram_chat_id')  # —Ç—É—Ç –ø—Ä–æ–ø–∏—Å–∞–Ω ID –æ–±—â–µ–≥–æ —á–∞—Ç–∞
telegram = get_notifier('telegram')


def get_orders_yandex_market():
    campaign_id = os.getenv('campaign_id')
    ym_token = os.getenv('ym_token')
    url_ym = f'https://api.partner.market.yandex.ru/campaigns/{campaign_id}/orders'
    headers = {"Authorization": f"Bearer {ym_token}"}
    params = {
        "fake": "false",
        "status": "PROCESSING",
        "substatus": "STARTED"
    }
    response = requests.get(url_ym, headers=headers, params=params)
    if response.status_code == 200:
        orders_data = response.json().get('orders', [])  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –∫–ª—é—á–∞ 'orders'
        return orders_data  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤


def get_orders_wildberries():
    wb_api_token = os.getenv('wb_token')
    url = 'https://suppliers-api.wildberries.ru/api/v3/orders/new'
    headers = {'Authorization': wb_api_token}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        orders = response.json().get('orders', [])
        return orders

def get_orders_megamarket():
    mm_token = os.getenv('mm_token')
    url_mm = 'https://api.megamarket.tech/api/market/v1/partnerService/order/new'
    headers = {"Authorization": f"Bearer {mm_token}"}
    response = requests.get(url_mm, headers=headers)
    if response.status_code == 200:
        orders_data = response.json().get('data', {}).get('shipments', [])
        return orders_data



def write_order_id_to_file(order_id, filename):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if not os.path.exists(filename):
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ ID –∑–∞–∫–∞–∑–∞
        with open(filename, 'w') as file:
            file.write(str(order_id) + '\n')
        return True
    else:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á–∏—Ç–∞–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        with open(filename, 'r') as file:
            existing_ids = set(file.read().splitlines())

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π ID –≤ —Ñ–∞–π–ª–µ
        if str(order_id) not in existing_ids:
            # –ï—Å–ª–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ñ–∞–π–ª
            with open(filename, 'a') as file:
                file.write(str(order_id) + '\n')
            return True
        else:
            # –ï—Å–ª–∏ ID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ñ–∞–π–ª–µ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False
            return False


# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É, –∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å ID –∑–∞–∫–∞–∑–æ–≤
file_path = 'order_ids.txt'

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±–µ—Ä–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ñ–∞–π–ª–∞, –∫–æ–≥–¥–∞ –µ—Å—Ç—å –∑–∞–∫–∞–∑ —Å WB
def get_product(nmId):
    # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É CSV —Ñ–∞–π–ª—É
    file_path = 'sklad_prices.csv'
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV —Ñ–∞–π–ª–∞ –≤ DataFrame
    sklad = pd.read_csv(file_path)
    # –ù–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É, –≥–¥–µ "WB –ê—Ä—Ç–∏–∫—É–ª" —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç nmId
    product_row = sklad[sklad['WB –ê—Ä—Ç–∏–∫—É–ª'] == nmId]
    # –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ "–ú–æ–¥–µ–ª—å"
    if not product_row.empty:
        return product_row.iloc[0]['–ú–æ–¥–µ–ª—å']
    else:
        return None


def notify_about_new_orders(orders, platform, supplier):
    if not orders:
        pass
        # message = f"–ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ {platform} –æ—Ç {supplier} –Ω–µ—Ç."
        # telegram.notify(token=telegram_got_token, chat_id=telegram_chat_id, message=message)
    else:
        for order in orders:
            # –ó–∞–ø–∏—Å—å ID –∑–∞–∫–∞–∑–∞ –≤ —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if write_order_id_to_file(order.get('id'), file_path):
                message = f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ {platform}:\n\n"
                message += f"ID –∑–∞–∫–∞–∑–∞: {order.get('id')}\n"
                if supplier == 'Yandex.Market':
                    for item in order.get('items', []):
                        # –≠—Ç–æ —Ü–µ–Ω–∞ —Å–æ –≤—Å–µ–º–∏ —Å–∫–∏–¥–∫–∞–º–∏
                        subsidy_amount = next((subsidy.get('amount') for subsidy in item.get('subsidies', []) if
                                               subsidy.get('type') == 'SUBSIDY'), 0)
                        # –≠—Ç–æ —Ü–µ–Ω–∞ —Å–∫–∏–¥–∫–∏ —è–Ω–¥–µ–∫—Å–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–ª—é—Å—É–µ—Ç—Å—è –Ω–∏–∂–µ —Å —Ü–µ–Ω–æ–π —Å–æ –≤—Å–µ–º–∏ —Å–∫–∏–¥–∫–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
                        price = int(item.get('buyerPrice'))
                        message += f"–¢–æ–≤–∞—Ä: {item.get('offerName')}\n–¶–µ–Ω–∞: {int(subsidy_amount + price)} —Ä.\n"
                        # message += f"–¢–æ–≤–∞—Ä: {item.get('offerName')}\n–¶–µ–Ω–∞: {item.get('subsidies')} —Ä.\n"
                elif supplier == 'Wildberries':
                    message += f"–ê—Ä—Ç–∏–∫—É–ª: {order.get('article')} \n"
                    message += f"–¢–æ–≤–∞—Ä: {get_product(order.get('nmId'))} \n"
                    message += f"–¶–µ–Ω–∞: {str(order.get('convertedPrice'))[:-2]} —Ä.\n"
                elif supplier == 'MegaMarket':
                    for shipment in order.get('shipments', []):
                        for item in shipment.get('items', []):
                            message += f"–¢–æ–≤–∞—Ä: {item.get('itemName')}\n–¶–µ–Ω–∞: {item.get('price')} —Ä.\n"
                message += '\n'
                telegram.notify(token=telegram_got_token, chat_id=telegram_chat_id, message=message)


def check_for_new_orders():
    orders_yandex_market = get_orders_yandex_market()
    notify_about_new_orders(orders_yandex_market, "Yandex.Market", "Yandex.Market")

    orders_wildberries = get_orders_wildberries()
    notify_about_new_orders(orders_wildberries, "Wildberries", "Wildberries")

    orders_megamarket = get_orders_megamarket()
    notify_about_new_orders(orders_megamarket, "Megamarket", "Megamarket")
