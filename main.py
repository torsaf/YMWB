import remainders
import gen_file_sklad
from order_notifications import check_for_new_orders
import price_updater_WB as wb_updater
import price_updater_YM as ym_updater
import price_updater_MM as mm_updater
import price_updater_OZ as oz_updater
import signal
import time
import sys


def send_telegram_message(message):
    remainders.telegram.notify(token=remainders.telegram_got_token_error, chat_id=remainders.telegram_chat_id_error,
                               message=message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
def handle_exit_signal(signum, frame):
    send_telegram_message("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞‚ùóÔ∏è")
    sys.exit(0)


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
signal.signal(signal.SIGTERM, handle_exit_signal)
signal.signal(signal.SIGINT, handle_exit_signal)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
send_telegram_message("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞‚≠êÔ∏è")


def notify_error(action, error):
    message = f"üò® –û—à–∏–±–∫–∞ –ø—Ä–∏ {action}: {error}"
    send_telegram_message(message)


def update_prices(updater, file_path, update_action):
    try:
        data = updater.read_sklad_csv(file_path)
        update_action(data)
    except AttributeError as e:
        notify_error(f"–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –≤ {updater.__name__}", f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è read_sklad_csv: {e}")
    except Exception as e:
        notify_error(f"–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –≤ {updater.__name__}", e)


def update_stock(update_func, stock_data):
    try:
        update_func(stock_data)
    except Exception as e:
        notify_error(f"–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ {update_func.__name__}", e)


if __name__ == "__main__":
    while True:
        # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Google —Ç–∞–±–ª–∏—Ü –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
        try:
            gen_file_sklad.gen_sklad()
        except Exception as e:
            notify_error("–ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google –¢–∞–±–ª–∏—Ü—ã", e)
        time.sleep(5)

        # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –≤ –Ω—É–∂–Ω—ã–π –≤–∏–¥
        try:
            wb, ym, mm, oz = remainders.gen_sklad()
        except Exception as e:
            notify_error("–ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞", e)
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–≤—à—É—é—Å—è —á–∞—Å—Ç—å –∏—Ç–µ—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –≤ WB, YM –∏ MM
        update_stock(remainders.wb_update, wb)
        update_stock(remainders.ym_update, ym)
        update_stock(remainders.mm_update, mm)
        update_stock(remainders.oz_update, oz)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        try:
            check_for_new_orders()
        except Exception as e:
            notify_error("–ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤", e)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –Ω–∞ WB
        try:
            df = wb_updater.load_data('sklad_prices_wildberries.csv')
            wb_data = wb_updater.create_wb_data(df)
            wb_updater.wb_price_update(wb_data)
        except Exception as e:
            notify_error("–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –≤ Wildberries", e)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –Ω–∞ YM
        update_prices(ym_updater, 'sklad_prices_yandex.csv', ym_updater.ym_price_update)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –Ω–∞ MM
        update_prices(mm_updater, 'sklad_prices_megamarket.csv', mm_updater.mm_price_update)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –Ω–∞ OZ
        update_prices(oz_updater, 'sklad_prices_ozon.csv', oz_updater.oz_price_update)

        time.sleep(400)
