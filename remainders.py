"""
–§—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è:
- gen_sklad: –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø–∞—Å–∞—Ö –∏–∑ —Ñ–∞–π–ª–∞ sklad_prices –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∏—Ö –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
- wb_update: –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø–∞—Å–∞—Ö –Ω–∞ —Å–∫–ª–∞–¥–µ Wildberries.
- ym_update: –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø–∞—Å–∞—Ö –Ω–∞ —Å–∫–ª–∞–¥–µ Yandex.Market.

"""

import requests
import os
from dotenv import load_dotenv
from datetime import datetime, timezone
from notifiers import get_notifier
import pandas as pd
import gspread

load_dotenv()

telegram_got_token = os.getenv('telegram_got_token')
telegram_chat_id = os.getenv('telegram_chat_id')
telegram = get_notifier('telegram')


def gen_sklad():
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã pandas –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
    pd.set_option('display.max_columns', None)  # –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤—Å–µ —Å—Ç–æ–ª–±—Ü—ã
    pd.set_option('display.width', 1000)  # —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à–∏—Ä–∏–Ω—É –≤—ã–≤–æ–¥–∞
    # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É CSV —Ñ–∞–π–ª—É
    file_path = 'sklad_prices.csv'
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV —Ñ–∞–π–ª–∞ –≤ DataFrame, —É–∫–∞–∑–∞–≤ dtype –¥–ª—è WB Barcode –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
    sklad = pd.read_csv(file_path, dtype={'WB Barcode': str})
    # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Ç–æ–ª–±—Ü—ã
    desired_columns = ['YM', '–ú–æ–¥–µ–ª—å', '–ù–∞–ª–∏—á–∏–µ', 'WB Barcode']
    # –û—Ç–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Ç–æ–ª–±—Ü—ã
    sklad_filtered = sklad.loc[:, desired_columns]
    # –û—á–∏—Å—Ç–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –≤ 'WB Barcode': —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫ –≤ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    sklad_filtered['WB Barcode'] = sklad_filtered['WB Barcode'].str.strip()
    # –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏ –æ—á–∏—â–∞—Ç—å —Å—Ç—Ä–æ–∫–∏
    ym_frame = sklad_filtered[['YM', '–ù–∞–ª–∏—á–∏–µ']].dropna(subset=['–ù–∞–ª–∏—á–∏–µ'])
    ym_frame = ym_frame.dropna(subset=['YM'])
    ym_frame = ym_frame[ym_frame['YM'].astype(str).str.strip() != '']
    wb_frame = sklad_filtered[['WB Barcode', '–ù–∞–ª–∏—á–∏–µ']].dropna(subset=['–ù–∞–ª–∏—á–∏–µ'])
    wb_frame = wb_frame.dropna(subset=['WB Barcode'])

    wb_final = []
    if not wb_frame.empty:
        for index, row in wb_frame.iterrows():
            sku = row['WB Barcode']
            amount = row['–ù–∞–ª–∏—á–∏–µ']
            wb_final.append({"sku": sku, "amount": int(amount)})

    ym_final = []
    current_time = datetime.now(timezone.utc).isoformat()
    if not ym_frame.empty:
        for index, row in ym_frame.iterrows():
            sku = str(row['YM'])
            count = int(row['–ù–∞–ª–∏—á–∏–µ'])
            item = {
                "sku": sku,
                "items": [{"count": count, "updatedAt": current_time}]
            }
            ym_final.append(item)

    return wb_final, ym_final


def wb_update(wb_data):
    wb_api_token = os.getenv('wb_token')
    warehouse_id = int(os.getenv('warehouseId'))
    url_wb = f'https://suppliers-api.wildberries.ru/api/v3/stocks/{warehouse_id}'
    headers = {
        'Authorization': wb_api_token,
        'stocks': 'application/json'
    }
    params = {'warehouseId': warehouse_id, 'stocks': wb_data}
    response = requests.put(url_wb, headers=headers, json=params)
    if response.status_code != 204:
        message = f"üò® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∫–ª–∞–¥–∞ WB. –°—Ç–∞—Ç—É—Å-–∫–æ–¥: {response.status_code}"
        telegram.notify(token=telegram_got_token, chat_id=telegram_chat_id, message=message)


def ym_update(ym_data):
    ym_token = os.getenv('ym_token')
    campaign_id = os.getenv('campaign_id')
    url_ym = f'https://api.partner.market.yandex.ru/campaigns/{campaign_id}/offers/stocks'
    headers = {"Authorization": f"Bearer {ym_token}"}
    stock_data = {"skus": ym_data}
    response = requests.put(url_ym, headers=headers, json=stock_data)
    if response.status_code != 200:
        message = f"üò® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∫–ª–∞–¥–∞ YM. –°—Ç–∞—Ç—É—Å-–∫–æ–¥: {response.status_code}"
        telegram.notify(token=telegram_got_token, chat_id=telegram_chat_id, message=message)
