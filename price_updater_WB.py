"""
–§—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è:
- wb_price_update: –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–∞—Ö –Ω–∞ Wildberries.
"""

import requests
import os
import pandas as pd
from dotenv import load_dotenv
from notifiers import get_notifier

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

telegram_got_token = os.getenv('telegram_got_token')
telegram_chat_id = os.getenv('telegram_chat_id')
telegram_got_token_error = os.getenv('telegram_got_token_error')
telegram_chat_id_error = os.getenv('telegram_chat_id_error')
telegram = get_notifier('telegram')


def wb_price_update(wb_data):
    wb_api_token = os.getenv('wb_token')
    url_wb = 'https://discounts-prices-api.wildberries.ru/api/v2/upload/task'
    headers = {
        'Authorization': wb_api_token,
        'Content-Type': 'application/json'
    }
    response = requests.post(url_wb, headers=headers, json=wb_data)
    if response.status_code != 200:
        # –ò—Å–∫–ª—é—á–∞–µ–º –æ—à–∏–±–∫—É 400 —Å —Ç–µ–∫—Å—Ç–æ–º "No goods for process"
        if response.status_code == 400 and "No goods for process" in response.json().get('errorText', ''):
            pass
        else:
            message = f"üò® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω WB. –°—Ç–∞—Ç—É—Å-–∫–æ–¥: {response.status_code}, –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}"
            telegram.notify(token=telegram_got_token_error, chat_id=telegram_chat_id_error, message=message)


def load_data(file_path):
    df = pd.read_csv(file_path)
    df = df[['WB –ê—Ä—Ç–∏–∫—É–ª', '–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏']]
    df = df.dropna(subset=['WB –ê—Ä—Ç–∏–∫—É–ª'])
    df['WB –ê—Ä—Ç–∏–∫—É–ª'] = df['WB –ê—Ä—Ç–∏–∫—É–ª'].astype(int)
    df['–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏'] = df['–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏'].astype(int)
    return df


def create_wb_data(df):
    wb_data_list = []
    for _, row in df.iterrows():
        wb_data_list.append({
            "nmID": int(row['WB –ê—Ä—Ç–∏–∫—É–ª']),
            "price": int(row['–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏']),
            "discount": 16
        })
    return {"data": wb_data_list}


if __name__ == "__main__":
    # –°—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ sklad_prices.csv
    df = load_data('sklad_prices.csv')

    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è WB API
    wb_data = create_wb_data(df)

    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
    wb_price_update(wb_data)
