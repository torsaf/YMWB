"""
–ú–æ–¥—É–ª—å `auto_stock_updater` –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö (ozon, wildberries, yandex)
–Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–Ω–µ—à–Ω–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (!YMWB.db ‚Üí —Ç–∞–±–ª–∏—Ü–∞ prices).

–û—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏:
- –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –∏ –û–ü–¢ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã prices.
- –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ marketplace_base.db.
- –û–±–Ω—É–ª—è–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —É –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ —Ç–µ—Ö, —á—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–µ.
- –õ–æ–≥–∏—Ä—É–µ—Ç –∫–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å –ø–æ–º–æ—â—å—é loguru.
"""

import sqlite3
from logger_config import logger
from datetime import datetime
import json
import os

def update(flags):
    logger.info("üöÄ –ù–∞—á–∞—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤")
    source_conn = sqlite3.connect('System/!YMWB.db', timeout=10)
    target_conn = sqlite3.connect('System/marketplace_base.db', timeout=10)
    logger.debug("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –∏ –û–ü–¢ –∏–∑ YMWB
    source_cursor = source_conn.cursor()
    source_cursor.execute("""SELECT "–ü–æ—Å—Ç–∞–≤—â–∏–∫", "–ê—Ä—Ç–∏–∫—É–ª", "–ù–∞–ª–∏—á–∏–µ", "–û–ü–¢" FROM prices""")
    source_data = source_cursor.fetchall()
    logger.debug(f"üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(source_data)} –∑–∞–ø–∏—Å–µ–π –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (prices)")

    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Å–ª–æ–≤–∞—Ä—é (–ø–æ—Å—Ç–∞–≤—â–∏–∫, –∞—Ä—Ç–∏–∫—É–ª) ‚Üí (–Ω–∞–ª–∏—á–∏–µ, –æ–ø—Ç)
    source_dict = {}
    for supplier, article, stock, opt in source_data:
        try:
            supplier = str(supplier).strip()
            article = str(article).strip()
            stock = int(str(stock).strip())
            opt = int(str(opt).strip())
            if stock < 3:
                stock = 0  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –º–µ–Ω—å—à–µ 3
            source_dict[(supplier, article)] = (stock, opt)
        except Exception as e:
            logger.warning(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ prices: {e}")

    cursor = target_conn.cursor()
    cursor.execute("""SELECT rowid, –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å, –ü–æ—Å—Ç–∞–≤—â–∏–∫, –ê—Ä—Ç–∏–∫—É–ª, –°—Ç–∞—Ç—É—Å, –ú–æ–¥–µ–ª—å, –ù–∞–ª, –û–ø—Ç, –ù–∞—Ü–µ–Ω–∫–∞ FROM marketplace""")
    all_rows = cursor.fetchall()

    updated = 0

    for row in all_rows:
        rowid, mp, supplier, article, status, model, old_stock, old_opt, markup = row
        mp = mp.strip().lower()
        supplier = supplier.strip()
        article = article.strip()
        status = (status or "").strip().lower()
        model = model or "‚Äî"

        if not flags.get(mp, True):
            continue

        if not flags.get("suppliers", {}).get(supplier, True):
            continue

        key = (supplier, article)

        # === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ ===
        if status == "–≤—ã–∫–ª.":
            if old_stock != 0:
                logger.debug(f"‚õî {mp} | {article} ({model}) ‚Äî —Å—Ç–∞—Ç—É—Å '–≤—ã–∫–ª.' ‚Üí –æ–±–Ω—É–ª—è–µ–º stock")
                cursor.execute("""
                    UPDATE marketplace SET –ù–∞–ª = 0, "–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è" = ? WHERE rowid = ?
                """, (datetime.now().strftime("%d.%m.%Y %H:%M"), rowid))
            continue

        if key not in source_dict:
            # logger.debug(f"‚ùå –ü—Ä–æ–ø—É—Å–∫ {mp} | {supplier} / {article} ‚Äî –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ source_dict")
            continue

        new_stock, new_opt = source_dict[key]

        try:
            markup = float(str(markup).replace('%', '').replace(' ', '')) if markup else 0.0
        except:
            markup = 0.0

        try:
            new_price = round((new_opt + new_opt * markup / 100) / 100.0) * 100
        except:
            new_price = new_opt

        try:
            old_stock = int(old_stock)
        except:
            old_stock = 0
        try:
            old_opt = int(old_opt)
        except:
            old_opt = 0

        cursor.execute("SELECT –¶–µ–Ω–∞ FROM marketplace WHERE rowid = ?", (rowid,))
        row_price = cursor.fetchone()
        old_price = int(row_price[0]) if row_price and str(row_price[0]).isdigit() else 0

        if (old_stock != new_stock) or (old_opt != new_opt) or (old_price != new_price):
            logger.debug(
                f"‚úÖ {mp} | {article} ({model}) ‚Üí "
                f"stock: {old_stock} ‚Üí {new_stock}, "
                f"opt: {old_opt} ‚Üí {new_opt}, "
                f"price: {old_price} ‚Üí {new_price}"
            )
            cursor.execute("""
                UPDATE marketplace
                SET –ù–∞–ª = ?, –û–ø—Ç = ?, –¶–µ–Ω–∞ = ?, "–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è" = ?
                WHERE rowid = ?
            """, (new_stock, new_opt, new_price, datetime.now().strftime("%d.%m.%Y %H:%M"), rowid))
            updated += 1

    # === –û–±–Ω—É–ª—è–µ–º "–ù–∞–ª" —É –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ source_dict ===
    logger.info("üßπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ source_dict")
    cursor.execute("""SELECT rowid, –ü–æ—Å—Ç–∞–≤—â–∏–∫, –ê—Ä—Ç–∏–∫—É–ª, –ù–∞–ª, –°—Ç–∞—Ç—É—Å, –ú–æ–¥–µ–ª—å FROM marketplace""")
    all_rows = cursor.fetchall()

    for rowid, supplier, article, nal, status, model in all_rows:
        key = (supplier.strip(), article.strip())
        if key not in source_dict and supplier.strip() != "Sklad":
            if str(nal).strip() != "0":
                logger.debug(f"‚ùå {supplier} / {article} ({model}) –Ω–µ—Ç –≤ –ø—Ä–∞–π—Å–µ ‚Üí –ù–∞–ª = 0")
                cursor.execute("""
                    UPDATE marketplace SET –ù–∞–ª = 0, "–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è" = ? WHERE rowid = ?
                """, (datetime.now().strftime("%d.%m.%Y %H:%M"), rowid))

    target_conn.commit()
    source_conn.close()
    target_conn.close()
    logger.success(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ò–∑–º–µ–Ω–µ–Ω–æ —Å—Ç—Ä–æ–∫: {updated}")
